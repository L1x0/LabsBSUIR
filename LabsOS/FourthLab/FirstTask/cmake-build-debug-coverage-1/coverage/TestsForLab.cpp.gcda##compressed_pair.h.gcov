        -:    0:Source:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__memory/compressed_pair.h
        -:    0:Graph:/Users/artemastahov/All_files/styding/LabsBSUIR/LabsOS/FourthLab/FirstTask/cmake-build-debug-coverage-1/CMakeFiles/tests_for_lab.dir/TestsForLab.cpp.gcno
        -:    0:Data:/Users/artemastahov/All_files/styding/LabsBSUIR/LabsOS/FourthLab/FirstTask/cmake-build-debug-coverage-1/CMakeFiles/tests_for_lab.dir/TestsForLab.cpp.gcda
        -:    0:Runs:6
        -:    0:Programs:1
        -:    1:// -*- C++ -*-
        -:    2://===----------------------------------------------------------------------===//
        -:    3://
        -:    4:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    5:// See https://llvm.org/LICENSE.txt for license information.
        -:    6:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    7://
        -:    8://===----------------------------------------------------------------------===//
        -:    9:
        -:   10:#ifndef _LIBCPP___MEMORY_COMPRESSED_PAIR_H
        -:   11:#define _LIBCPP___MEMORY_COMPRESSED_PAIR_H
        -:   12:
        -:   13:#include <__config>
        -:   14:#include <__fwd/get.h>
        -:   15:#include <__fwd/tuple.h>
        -:   16:#include <__tuple/tuple_indices.h>
        -:   17:#include <__type_traits/decay.h>
        -:   18:#include <__type_traits/dependent_type.h>
        -:   19:#include <__type_traits/enable_if.h>
        -:   20:#include <__type_traits/is_default_constructible.h>
        -:   21:#include <__type_traits/is_empty.h>
        -:   22:#include <__type_traits/is_final.h>
        -:   23:#include <__type_traits/is_same.h>
        -:   24:#include <__type_traits/is_swappable.h>
        -:   25:#include <__utility/forward.h>
        -:   26:#include <__utility/move.h>
        -:   27:#include <__utility/piecewise_construct.h>
        -:   28:#include <cstddef>
        -:   29:
        -:   30:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   31:#  pragma GCC system_header
        -:   32:#endif
        -:   33:
        -:   34:_LIBCPP_PUSH_MACROS
        -:   35:#include <__undef_macros>
        -:   36:
        -:   37:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   38:
        -:   39:// Tag used to default initialize one or both of the pair's elements.
        -:   40:struct __default_init_tag {};
        -:   41:struct __value_init_tag {};
        -:   42:
        -:   43:template <class _Tp, int _Idx, bool _CanBeEmptyBase = is_empty<_Tp>::value && !__libcpp_is_final<_Tp>::value>
        -:   44:struct __compressed_pair_elem {
        -:   45:  using _ParamT         = _Tp;
        -:   46:  using reference       = _Tp&;
        -:   47:  using const_reference = const _Tp&;
        -:   48:
function _ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EEC2B8ne180100ENS_18__default_init_tagE called 284 returned 100% blocks executed 100%
      284:   49:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__default_init_tag) {}
      284:   49-block  0
function _ZNSt3__122__compressed_pair_elemINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEELi0ELb0EEC2B8ne180100ENS_16__value_init_tagE called 18 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EEC2B8ne180100ENS_16__value_init_tagE called 738 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi0ELb0EEC2B8ne180100ENS_16__value_init_tagE called 5 returned 100% blocks executed 100%
      761:   50:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__value_init_tag) : __value_() {}
       18:   50-block  0
      738:   50-block  1
        5:   50-block  2
        -:   51:
        -:   52:  template <class _Up, class = __enable_if_t<!is_same<__compressed_pair_elem, __decay_t<_Up> >::value> >
function _ZNSt3__122__compressed_pair_elemImLi0ELb0EEC2B8ne180100IivEEOT_ called 102 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_4pairIPvmEELi0ELb0EEC2B8ne180100IDnvEEOT_ called 19 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIRNS_9allocatorINS_4pairIPvmEEEELi1ELb0EEC2B8ne180100IS6_vEEOT_ called 13 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EELi0ELb0EEC2B8ne180100IRS6_vEEOT_ called 7 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_22__tree_node_destructorINS_9allocatorINS_11__tree_nodeINS_12__value_typeIPvmEES5_EEEEEELi1ELb0EEC2B8ne180100IS9_vEEOT_ called 7 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi0ELb0EEC2B8ne180100IRS7_vEEOT_ called 0 returned 0% blocks executed 0%
      148:   53:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(_Up&& __u)
      148:   54:      : __value_(std::forward<_Up>(__u)) {}
      102:   54-block  0
       19:   54-block  1
       13:   54-block  2
        7:   54-block  3
        7:   54-block  4
    $$$$$:   54-block  5
        -:   55:
        -:   56:#ifndef _LIBCPP_CXX03_LANG
        -:   57:  template <class... _Args, size_t... _Indices>
        -:   58:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX17 explicit __compressed_pair_elem(
        -:   59:      piecewise_construct_t, tuple<_Args...> __args, __tuple_indices<_Indices...>)
        -:   60:      : __value_(std::forward<_Args>(std::get<_Indices>(__args))...) {}
        -:   61:#endif
        -:   62:
function _ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getB8ne180100Ev called 1439 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEELi0ELb0EE5__getB8ne180100Ev called 77 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_4pairIPvmEELi0ELb0EE5__getB8ne180100Ev called 59 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIRNS_9allocatorINS_4pairIPvmEEEELi1ELb0EE5__getB8ne180100Ev called 29 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_22__tree_node_destructorINS_9allocatorINS_11__tree_nodeINS_12__value_typeIPvmEES5_EEEEEELi1ELb0EE5__getB8ne180100Ev called 7 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemImLi0ELb0EE5__getB8ne180100Ev called 116 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EELi0ELb0EE5__getB8ne180100Ev called 28 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEELi0ELb0EE5__getB8ne180100Ev called 684 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi0ELb0EE5__getB8ne180100Ev called 358 returned 100% blocks executed 100%
     2797:   63:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX14 reference __get() _NOEXCEPT { return __value_; }
     1439:   63-block  0
       77:   63-block  1
       59:   63-block  2
       29:   63-block  3
        7:   63-block  4
      116:   63-block  5
       28:   63-block  6
      684:   63-block  7
      358:   63-block  8
function _ZNKSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getB8ne180100Ev called 19617 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemIPNS_4pairIPvmEELi0ELb0EE5__getB8ne180100Ev called 26 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEELi0ELb0EE5__getB8ne180100Ev called 33 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EELi0ELb0EE5__getB8ne180100Ev called 14 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi0ELb0EE5__getB8ne180100Ev called 138 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemImLi0ELb0EE5__getB8ne180100Ev called 170 returned 100% blocks executed 100%
function _ZNKSt3__122__compressed_pair_elemIPNS_18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEELi0ELb0EE5__getB8ne180100Ev called 3510 returned 100% blocks executed 100%
    23508:   64:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR const_reference __get() const _NOEXCEPT { return __value_; }
    19617:   64-block  0
       26:   64-block  1
       33:   64-block  2
       14:   64-block  3
      138:   64-block  4
      170:   64-block  5
     3510:   64-block  6
        -:   65:
        -:   66:private:
        -:   67:  _Tp __value_;
        -:   68:};
        -:   69:
        -:   70:template <class _Tp, int _Idx>
        -:   71:struct __compressed_pair_elem<_Tp, _Idx, true> : private _Tp {
        -:   72:  using _ParamT         = _Tp;
        -:   73:  using reference       = _Tp&;
        -:   74:  using const_reference = const _Tp&;
        -:   75:  using __value_type    = _Tp;
        -:   76:
        -:   77:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem() = default;
function _ZNSt3__122__compressed_pair_elemINS_9allocatorINS_4pairIPvmEEEELi1ELb1EEC2B8ne180100ENS_18__default_init_tagE called 6 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EEC2B8ne180100ENS_18__default_init_tagE called 986 returned 100% blocks executed 100%
      992:   78:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__default_init_tag) {}
        6:   78-block  0
      986:   78-block  1
function _ZNSt3__122__compressed_pair_elemINS_9allocatorINS_11__tree_nodeINS_12__value_typeIPvmEES4_EEEELi1ELb1EEC2B8ne180100ENS_16__value_init_tagE called 6 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_14default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEELi1ELb1EEC2B8ne180100ENS_16__value_init_tagE called 5 returned 100% blocks executed 100%
       11:   79:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(__value_init_tag) : __value_type() {}
        6:   79-block  0
        5:   79-block  1
        -:   80:
        -:   81:  template <class _Up, class = __enable_if_t<!is_same<__compressed_pair_elem, __decay_t<_Up> >::value> >
function _ZNSt3__122__compressed_pair_elemINS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEELi1ELb1EEC2B8ne180100IRKS7_vEEOT_ called 6 returned 100% blocks executed 100%
        6:   82:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair_elem(_Up&& __u)
        6:   83:      : __value_type(std::forward<_Up>(__u)) {}
        6:   83-block  0
        -:   84:
        -:   85:#ifndef _LIBCPP_CXX03_LANG
        -:   86:  template <class... _Args, size_t... _Indices>
        -:   87:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX17
        -:   88:  __compressed_pair_elem(piecewise_construct_t, tuple<_Args...> __args, __tuple_indices<_Indices...>)
        -:   89:      : __value_type(std::forward<_Args>(std::get<_Indices>(__args))...) {}
        -:   90:#endif
        -:   91:
function _ZNSt3__122__compressed_pair_elemINS_9allocatorINS_4pairIPvmEEEELi1ELb1EE5__getB8ne180100Ev called 59 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_9allocatorINS_11__tree_nodeINS_12__value_typeIPvmEES4_EEEELi1ELb1EE5__getB8ne180100Ev called 14 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEELi1ELb1EE5__getB8ne180100Ev called 24 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_14default_deleteINS_18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEEEELi1ELb1EE5__getB8ne180100Ev called 342 returned 100% blocks executed 100%
function _ZNSt3__122__compressed_pair_elemINS_14default_deleteINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEELi1ELb1EE5__getB8ne180100Ev called 0 returned 0% blocks executed 0%
      439:   92:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX14 reference __get() _NOEXCEPT { return *this; }
       59:   92-block  0
       14:   92-block  1
       24:   92-block  2
      342:   92-block  3
    $$$$$:   92-block  4
function _ZNKSt3__122__compressed_pair_elemINS_9allocatorINS_4pairIPvmEEEELi1ELb1EE5__getB8ne180100Ev called 13 returned 100% blocks executed 100%
       13:   93:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR const_reference __get() const _NOEXCEPT { return *this; }
       13:   93-block  0
        -:   94:};
        -:   95:
        -:   96:template <class _T1, class _T2>
        -:   97:class __compressed_pair : private __compressed_pair_elem<_T1, 0>, private __compressed_pair_elem<_T2, 1> {
        -:   98:public:
        -:   99:  // NOTE: This static assert should never fire because __compressed_pair
        -:  100:  // is *almost never* used in a scenario where it's possible for T1 == T2.
        -:  101:  // (The exception is std::function where it is possible that the function
        -:  102:  //  object and the allocator have the same type).
        -:  103:  static_assert(
        -:  104:      (!is_same<_T1, _T2>::value),
        -:  105:      "__compressed_pair cannot be instantiated when T1 and T2 are the same type; "
        -:  106:      "The current implementation is NOT ABI-compatible with the previous implementation for this configuration");
        -:  107:
        -:  108:  using _Base1 _LIBCPP_NODEBUG = __compressed_pair_elem<_T1, 0>;
        -:  109:  using _Base2 _LIBCPP_NODEBUG = __compressed_pair_elem<_T2, 1>;
        -:  110:
        -:  111:  template <bool _Dummy = true,
        -:  112:            class       = __enable_if_t< __dependent_type<is_default_constructible<_T1>, _Dummy>::value &&
        -:  113:                                   __dependent_type<is_default_constructible<_T2>, _Dummy>::value > >
function _ZNSt3__117__compressed_pairINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEENS_9allocatorINS_11__tree_nodeINS_12__value_typeIS3_mEES3_EEEEEC1B8ne180100ILb1EvEEv called 6 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEENS_9allocatorINS_11__tree_nodeINS_12__value_typeIS3_mEES3_EEEEEC2B8ne180100ILb1EvEEv called 6 returned 100% blocks executed 100%
       12:  114:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair()
       12:  115:      : _Base1(__value_init_tag()), _Base2(__value_init_tag()) {}
        6:  115-block  0
        6:  115-block  1
        -:  116:
        -:  117:  template <class _U1, class _U2>
function _ZNSt3__117__compressed_pairImNS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEEEC1B8ne180100IiRKS7_EEOT_OT0_ called 6 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairImNS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEEEC2B8ne180100IiRKS7_EEOT_OT0_ called 6 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEENS_9allocatorIS3_EEEC1B8ne180100IDnNS_18__default_init_tagEEEOT_OT0_ called 6 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEENS_9allocatorIS3_EEEC2B8ne180100IDnNS_18__default_init_tagEEEOT_OT0_ called 6 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEERNS_9allocatorIS3_EEEC1B8ne180100IDnS7_EEOT_OT0_ called 13 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEERNS_9allocatorIS3_EEEC2B8ne180100IDnS7_EEOT_OT0_ called 13 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EENS_22__tree_node_destructorINS_9allocatorIS5_EEEEEC1B8ne180100IRS6_SA_EEOT_OT0_ called 7 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EENS_22__tree_node_destructorINS_9allocatorIS5_EEEEEC2B8ne180100IRS6_SA_EEOT_OT0_ called 7 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1B8ne180100INS_16__value_init_tagENS_18__default_init_tagEEEOT_OT0_ called 738 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2B8ne180100INS_16__value_init_tagENS_18__default_init_tagEEEOT_OT0_ called 738 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1B8ne180100INS_18__default_init_tagESA_EEOT_OT0_ called 248 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2B8ne180100INS_18__default_init_tagESA_EEOT_OT0_ called 248 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEEC1B8ne180100IRS7_NS_16__value_init_tagEEEOT_OT0_ called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEEC2B8ne180100IRS7_NS_16__value_init_tagEEEOT_OT0_ called 0 returned 0% blocks executed 0%
function _ZNSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEEC1B8ne180100INS_16__value_init_tagESC_EEOT_OT0_ called 5 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEEC2B8ne180100INS_16__value_init_tagESC_EEOT_OT0_ called 5 returned 100% blocks executed 100%
     2046:  118:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR explicit __compressed_pair(_U1&& __t1, _U2&& __t2)
     2046:  119:      : _Base1(std::forward<_U1>(__t1)), _Base2(std::forward<_U2>(__t2)) {}
        6:  119-block  0
        6:  119-block  1
        6:  119-block  2
        6:  119-block  3
       13:  119-block  4
       13:  119-block  5
        7:  119-block  6
        7:  119-block  7
      738:  119-block  8
      738:  119-block  9
      248:  119-block 10
      248:  119-block 11
    $$$$$:  119-block 12
    $$$$$:  119-block 13
        5:  119-block 14
        5:  119-block 15
        -:  120:
        -:  121:#ifndef _LIBCPP_CXX03_LANG
        -:  122:  template <class... _Args1, class... _Args2>
        -:  123:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX17 explicit __compressed_pair(
        -:  124:      piecewise_construct_t __pc, tuple<_Args1...> __first_args, tuple<_Args2...> __second_args)
        -:  125:      : _Base1(__pc, std::move(__first_args), typename __make_tuple_indices<sizeof...(_Args1)>::type()),
        -:  126:        _Base2(__pc, std::move(__second_args), typename __make_tuple_indices<sizeof...(_Args2)>::type()) {}
        -:  127:#endif
        -:  128:
function _ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstB8ne180100Ev called 1439 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEENS_9allocatorINS_11__tree_nodeINS_12__value_typeIS3_mEES3_EEEEE5firstB8ne180100Ev called 59 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEENS_9allocatorIS3_EEE5firstB8ne180100Ev called 33 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEERNS_9allocatorIS3_EEE5firstB8ne180100Ev called 26 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairImNS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEEE5firstB8ne180100Ev called 14 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EENS_22__tree_node_destructorINS_9allocatorIS5_EEEEE5firstB8ne180100Ev called 28 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEE5firstB8ne180100Ev called 684 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEE5firstB8ne180100Ev called 10 returned 100% blocks executed 100%
     2293:  129:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX14 typename _Base1::reference first() _NOEXCEPT {
     2293:  130:    return static_cast<_Base1&>(*this).__get();
     1439:  130-block  0
       59:  130-block  1
       33:  130-block  2
       26:  130-block  3
       14:  130-block  4
       28:  130-block  5
      684:  130-block  6
       10:  130-block  7
        -:  131:  }
        -:  132:
function _ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstB8ne180100Ev called 19617 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPNS_4pairIPvmEENS_9allocatorIS3_EEE5firstB8ne180100Ev called 19 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPNS_4pairIPvmEERNS_9allocatorIS3_EEE5firstB8ne180100Ev called 7 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEENS_9allocatorINS_11__tree_nodeINS_12__value_typeIS3_mEES3_EEEEE5firstB8ne180100Ev called 33 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EENS_22__tree_node_destructorINS_9allocatorIS5_EEEEE5firstB8ne180100Ev called 14 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEE5firstB8ne180100Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__117__compressed_pairImNS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEEE5firstB8ne180100Ev called 2 returned 100% blocks executed 100%
function _ZNKSt3__117__compressed_pairIPNS_18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEE5firstB8ne180100Ev called 3510 returned 100% blocks executed 100%
    23202:  133:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR typename _Base1::const_reference first() const _NOEXCEPT {
    23202:  134:    return static_cast<_Base1 const&>(*this).__get();
    19617:  134-block  0
       19:  134-block  1
        7:  134-block  2
       33:  134-block  3
       14:  134-block  4
    $$$$$:  134-block  5
        2:  134-block  6
     3510:  134-block  7
        -:  135:  }
        -:  136:
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEENS_9allocatorIS3_EEE6secondB8ne180100Ev called 59 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_4pairIPvmEERNS_9allocatorIS3_EEE6secondB8ne180100Ev called 29 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairINS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEENS_9allocatorINS_11__tree_nodeINS_12__value_typeIS3_mEES3_EEEEE6secondB8ne180100Ev called 14 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairImNS_19__map_value_compareIPvNS_12__value_typeIS2_mEENS_4lessIS2_EELb1EEEE6secondB8ne180100Ev called 24 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_11__tree_nodeINS_12__value_typeIPvmEES3_EENS_22__tree_node_destructorINS_9allocatorIS5_EEEEE6secondB8ne180100Ev called 7 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEE6secondB8ne180100Ev called 342 returned 100% blocks executed 100%
function _ZNSt3__117__compressed_pairIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS6_EEE6secondB8ne180100Ev called 0 returned 0% blocks executed 0%
      475:  137:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX14 typename _Base2::reference second() _NOEXCEPT {
      475:  138:    return static_cast<_Base2&>(*this).__get();
       59:  138-block  0
       29:  138-block  1
       14:  138-block  2
       24:  138-block  3
        7:  138-block  4
      342:  138-block  5
    $$$$$:  138-block  6
        -:  139:  }
        -:  140:
function _ZNKSt3__117__compressed_pairIPNS_4pairIPvmEENS_9allocatorIS3_EEE6secondB8ne180100Ev called 13 returned 100% blocks executed 100%
       13:  141:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR typename _Base2::const_reference second() const _NOEXCEPT {
       13:  142:    return static_cast<_Base2 const&>(*this).__get();
       13:  142-block  0
        -:  143:  }
        -:  144:
        -:  145:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR static _Base1* __get_first_base(__compressed_pair* __pair) _NOEXCEPT {
        -:  146:    return static_cast<_Base1*>(__pair);
        -:  147:  }
        -:  148:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR static _Base2* __get_second_base(__compressed_pair* __pair) _NOEXCEPT {
        -:  149:    return static_cast<_Base2*>(__pair);
        -:  150:  }
        -:  151:
        -:  152:  _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX14 void swap(__compressed_pair& __x)
        -:  153:      _NOEXCEPT_(__is_nothrow_swappable<_T1>::value&& __is_nothrow_swappable<_T2>::value) {
        -:  154:    using std::swap;
        -:  155:    swap(first(), __x.first());
        -:  156:    swap(second(), __x.second());
        -:  157:  }
        -:  158:};
        -:  159:
        -:  160:template <class _T1, class _T2>
        -:  161:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX14 void
        -:  162:swap(__compressed_pair<_T1, _T2>& __x, __compressed_pair<_T1, _T2>& __y)
        -:  163:    _NOEXCEPT_(__is_nothrow_swappable<_T1>::value&& __is_nothrow_swappable<_T2>::value) {
        -:  164:  __x.swap(__y);
        -:  165:}
        -:  166:
        -:  167:_LIBCPP_END_NAMESPACE_STD
        -:  168:
        -:  169:_LIBCPP_POP_MACROS
        -:  170:
        -:  171:#endif // _LIBCPP___MEMORY_COMPRESSED_PAIR_H
