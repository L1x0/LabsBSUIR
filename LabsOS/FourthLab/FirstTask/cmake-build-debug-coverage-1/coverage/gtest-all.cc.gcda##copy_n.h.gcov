        -:    0:Source:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/copy_n.h
        -:    0:Graph:/Users/artemastahov/All_files/styding/LabsBSUIR/LabsOS/FourthLab/FirstTask/cmake-build-debug-coverage-1/googletest/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.gcno
        -:    0:Data:/Users/artemastahov/All_files/styding/LabsBSUIR/LabsOS/FourthLab/FirstTask/cmake-build-debug-coverage-1/googletest/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://===----------------------------------------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#ifndef _LIBCPP___ALGORITHM_COPY_N_H
        -:   10:#define _LIBCPP___ALGORITHM_COPY_N_H
        -:   11:
        -:   12:#include <__algorithm/copy.h>
        -:   13:#include <__config>
        -:   14:#include <__iterator/iterator_traits.h>
        -:   15:#include <__type_traits/enable_if.h>
        -:   16:#include <__utility/convert_to_integral.h>
        -:   17:
        -:   18:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   19:#  pragma GCC system_header
        -:   20:#endif
        -:   21:
        -:   22:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   23:
        -:   24:template <class _InputIterator,
        -:   25:          class _Size,
        -:   26:          class _OutputIterator,
        -:   27:          __enable_if_t<__has_input_iterator_category<_InputIterator>::value &&
        -:   28:                            !__has_random_access_iterator_category<_InputIterator>::value,
        -:   29:                        int> = 0>
        -:   30:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 _OutputIterator
        -:   31:copy_n(_InputIterator __first, _Size __orig_n, _OutputIterator __result) {
        -:   32:  typedef decltype(std::__convert_to_integral(__orig_n)) _IntegralSize;
        -:   33:  _IntegralSize __n = __orig_n;
        -:   34:  if (__n > 0) {
        -:   35:    *__result = *__first;
        -:   36:    ++__result;
        -:   37:    for (--__n; __n > 0; --__n) {
        -:   38:      ++__first;
        -:   39:      *__result = *__first;
        -:   40:      ++__result;
        -:   41:    }
        -:   42:  }
        -:   43:  return __result;
        -:   44:}
        -:   45:
        -:   46:template <class _InputIterator,
        -:   47:          class _Size,
        -:   48:          class _OutputIterator,
        -:   49:          __enable_if_t<__has_random_access_iterator_category<_InputIterator>::value, int> = 0>
        -:   50:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 _OutputIterator
function _ZNSt3__16copy_nB8ne180100IPKcmPcLi0EEET1_T_T0_S4_ called 72 returned 100% blocks executed 100%
       72:   51:copy_n(_InputIterator __first, _Size __orig_n, _OutputIterator __result) {
        -:   52:  typedef typename iterator_traits<_InputIterator>::difference_type difference_type;
        -:   53:  typedef decltype(std::__convert_to_integral(__orig_n)) _IntegralSize;
       72:   54:  _IntegralSize __n = __orig_n;
       72:   55:  return std::copy(__first, __first + difference_type(__n), __result);
       72:   55-block  0
        -:   56:}
        -:   57:
        -:   58:_LIBCPP_END_NAMESPACE_STD
        -:   59:
        -:   60:#endif // _LIBCPP___ALGORITHM_COPY_N_H
