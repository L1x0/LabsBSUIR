        -:    0:Source:/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__utility/swap.h
        -:    0:Graph:/Users/artemastahov/All_files/styding/LabsBSUIR/LabsOS/FourthLab/FirstTask/cmake-build-debug-coverage-1/CMakeFiles/tests_for_lab.dir/TestsForLab.cpp.gcno
        -:    0:Data:/Users/artemastahov/All_files/styding/LabsBSUIR/LabsOS/FourthLab/FirstTask/cmake-build-debug-coverage-1/CMakeFiles/tests_for_lab.dir/TestsForLab.cpp.gcda
        -:    0:Runs:6
        -:    0:Programs:1
        -:    1://===----------------------------------------------------------------------===//
        -:    2://
        -:    3:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    4:// See https://llvm.org/LICENSE.txt for license information.
        -:    5:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    6://
        -:    7://===----------------------------------------------------------------------===//
        -:    8:
        -:    9:#ifndef _LIBCPP___UTILITY_SWAP_H
        -:   10:#define _LIBCPP___UTILITY_SWAP_H
        -:   11:
        -:   12:#include <__config>
        -:   13:#include <__type_traits/is_move_assignable.h>
        -:   14:#include <__type_traits/is_move_constructible.h>
        -:   15:#include <__type_traits/is_nothrow_move_assignable.h>
        -:   16:#include <__type_traits/is_nothrow_move_constructible.h>
        -:   17:#include <__type_traits/is_swappable.h>
        -:   18:#include <__utility/declval.h>
        -:   19:#include <__utility/move.h>
        -:   20:#include <cstddef>
        -:   21:
        -:   22:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   23:#  pragma GCC system_header
        -:   24:#endif
        -:   25:
        -:   26:_LIBCPP_PUSH_MACROS
        -:   27:#include <__undef_macros>
        -:   28:
        -:   29:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   30:
        -:   31:#ifndef _LIBCPP_CXX03_LANG
        -:   32:template <class _Tp>
        -:   33:using __swap_result_t = __enable_if_t<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>;
        -:   34:#else
        -:   35:template <class>
        -:   36:using __swap_result_t = void;
        -:   37:#endif
        -:   38:
        -:   39:template <class _Tp>
function _ZNSt3__14swapB8ne180100IPNS_4pairIPvmEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ called 39 returned 100% blocks executed 100%
       39:   40:inline _LIBCPP_HIDE_FROM_ABI __swap_result_t<_Tp> _LIBCPP_CONSTEXPR_SINCE_CXX20 swap(_Tp& __x, _Tp& __y)
        -:   41:    _NOEXCEPT_(is_nothrow_move_constructible<_Tp>::value&& is_nothrow_move_assignable<_Tp>::value) {
       39:   42:  _Tp __t(std::move(__x));
       39:   43:  __x = std::move(__y);
       39:   44:  __y = std::move(__t);
       39:   45:}
       39:   45-block  0
        -:   46:
        -:   47:template <class _Tp, size_t _Np, __enable_if_t<__is_swappable<_Tp>::value, int> >
        -:   48:inline _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 void swap(_Tp (&__a)[_Np], _Tp (&__b)[_Np])
        -:   49:    _NOEXCEPT_(__is_nothrow_swappable<_Tp>::value) {
        -:   50:  for (size_t __i = 0; __i != _Np; ++__i) {
        -:   51:    swap(__a[__i], __b[__i]);
        -:   52:  }
        -:   53:}
        -:   54:
        -:   55:_LIBCPP_END_NAMESPACE_STD
        -:   56:
        -:   57:_LIBCPP_POP_MACROS
        -:   58:
        -:   59:#endif // _LIBCPP___UTILITY_SWAP_H
